import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';
import axios from 'axios';

const apiUrl = 'https://jsonplaceholder.typicode.com/users';

// Creating an async thunk using createAsyncThunk
export const fetchUsers = createAsyncThunk(
    'users/fetchUsers', // Action type prefix
    async () => {
        try {
            const response = await axios.get(apiUrl);
            return response.data; // Return fetched data
        } catch (error) {
            // Throwing an error will dispatch the rejected action
            throw new Error('Failed to fetch users');
        }
    }
);

// Creating a slice to manage the state and reducers
const usersSlice = createSlice({
    name: 'users',
    initialState: {
        data: [],
        loading: false,
        error: null,
    },
    reducers: {},
    extraReducers: {
        // Handling actions generated by createAsyncThunk
        [fetchUsers.pending]: (state) => {
            state.loading = true;
            state.error = null;
        },
        [fetchUsers.fulfilled]: (state, action) => {
            state.loading = false;
            state.data = action.payload; // Update state with fetched data
        },
        [fetchUsers.rejected]: (state, action) => {
            state.loading = false;
            state.error = action.error.message; // Handle the error if fetching fails
        },
    },
});

// Exporting the slice reducer and actions
export default usersSlice.reducer;
export const {} = usersSlice.actions;
